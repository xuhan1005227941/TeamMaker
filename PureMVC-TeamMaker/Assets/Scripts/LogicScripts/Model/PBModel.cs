// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PBModel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PBModel.proto</summary>
public static partial class PBModelReflection {

  #region Descriptor
  /// <summary>File descriptor for PBModel.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PBModelReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg1QQk1vZGVsLnByb3RvIi0KCExvZ2luUmVxEg8KB2FjY291bnQYASABKAkS",
          "EAoIcGFzc3dvcmQYAiABKAkiSwoITG9naW5Sc3ASHwoEdXNlchgBIAEoCzIR",
          "LlVzZXJNZXNzYWdlTW9kZWwSHgoHYWNjb3VudBgCIAEoCzINLkFjY291bnRN",
          "b2RlbCIwCgtSZWdpc3RlclJlcRIPCgdhY2NvdW50GAEgASgJEhAKCHBhc3N3",
          "b3JkGAIgASgJIi0KC1JlZ2lzdGVyUnNwEh4KB2FjY291bnQYASABKAsyDS5B",
          "Y2NvdW50TW9kZWwicgoVVXNlck1lc3NhZ2VfVXBkYXRlUmVxEgsKA1VpZBgB",
          "IAEoBRIQCghVc2VyTmFtZRgCIAEoCRIPCgdVc2VyQWdlGAMgASgFEhYKDlVz",
          "ZXJQcm9mZXNzaW9uGAQgASgJEhEKCVVzZXJTY29yZRgFIAEoBSI4ChVVc2Vy",
          "TWVzc2FnZV9VcGRhdGVSc3ASHwoEdXNlchgBIAEoCzIRLlVzZXJNZXNzYWdl",
          "TW9kZWwiIgoTVXNlck1lc3NhZ2VfTG9va1JlcRILCgNVaWQYASABKAUiNgoT",
          "VXNlck1lc3NhZ2VfTG9va1JzcBIfCgR1c2VyGAEgASgLMhEuVXNlck1lc3Nh",
          "Z2VNb2RlbCIeCg9GcmllbmRfQ2hlY2tSZXESCwoDVWlkGAEgASgFIj0KD0Zy",
          "aWVuZF9DaGVja1JzcBIqCg91c2VybWVzc2FnZUxpc3QYASADKAsyES5Vc2Vy",
          "TWVzc2FnZU1vZGVsIjEKDUZyaWVuZF9BZGRSZXESDwoHVGhpc1VpZBgBIAEo",
          "BRIPCgdUaGF0VWlkGAIgASgFIjsKDUZyaWVuZF9BZGRSc3ASKgoPdXNlcm1l",
          "c3NhZ2VMaXN0GAEgAygLMhEuVXNlck1lc3NhZ2VNb2RlbCI0ChBGcmllbmRf",
          "RGVsZXRlUmVxEg8KB1RoaXNVaWQYASABKAUSDwoHVGhhdFVpZBgCIAEoBSI+",
          "ChBGcmllbmRfRGVsZXRlUnNwEioKD3VzZXJtZXNzYWdlTGlzdBgBIAMoCzIR",
          "LlVzZXJNZXNzYWdlTW9kZWwiIwoURnJpZW5kQXBwbHlfQ2hlY2tSZXESCwoD",
          "VWlkGAEgASgFIkIKFEZyaWVuZEFwcGx5X0NoZWNrUnNwEioKD3VzZXJtZXNz",
          "YWdlTGlzdBgBIAMoCzIRLlVzZXJNZXNzYWdlTW9kZWwiOAoURnJpZW5kQXBw",
          "bHlfQWdyZWVSZXESDwoHVGhpc1VpZBgBIAEoBRIPCgdUaGF0VWlkGAIgASgF",
          "ImMKFEZyaWVuZEFwcGx5X0FncmVlUnNwEiQKCWFwcGx5TGlzdBgBIAMoCzIR",
          "LlVzZXJNZXNzYWdlTW9kZWwSJQoKZnJpZW5kTGlzdBgCIAMoCzIRLlVzZXJN",
          "ZXNzYWdlTW9kZWwiOwoXRnJpZW5kQXBwbHlfRGlzYWdyZWVSZXESDwoHVGhp",
          "c1VpZBgBIAEoBRIPCgdUaGF0VWlkGAIgASgFImYKF0ZyaWVuZEFwcGx5X0Rp",
          "c2FncmVlUnNwEiQKCWFwcGx5TGlzdBgBIAMoCzIRLlVzZXJNZXNzYWdlTW9k",
          "ZWwSJQoKZnJpZW5kTGlzdBgCIAMoCzIRLlVzZXJNZXNzYWdlTW9kZWwiIQoS",
          "QmxhY2tMaXN0X0NoZWNrUmVxEgsKA1VpZBgBIAEoBSJAChJCbGFja0xpc3Rf",
          "Q2hlY2tSc3ASKgoPdXNlcm1lc3NhZ2VMaXN0GAEgAygLMhEuVXNlck1lc3Nh",
          "Z2VNb2RlbCI0ChBCbGFja0xpc3RfQWRkUmVxEg8KB1RoaXNVaWQYASABKAUS",
          "DwoHVGhhdFVpZBgCIAEoBSKFAQoQQmxhY2tMaXN0X0FkZFJzcBIkCglhcHBs",
          "eUxpc3QYASADKAsyES5Vc2VyTWVzc2FnZU1vZGVsEiUKCmZyaWVuZExpc3QY",
          "AiADKAsyES5Vc2VyTWVzc2FnZU1vZGVsEiQKCWJsYWNrTGlzdBgDIAMoCzIR",
          "LlVzZXJNZXNzYWdlTW9kZWwiNwoTQmxhY2tMaXN0X0RlbGV0ZVJlcRIPCgdU",
          "aGlzVWlkGAEgASgFEg8KB1RoYXRVaWQYAiABKAUiQQoTQmxhY2tMaXN0X0Rl",
          "bGV0ZVJzcBIqCg91c2VybWVzc2FnZUxpc3QYASADKAsyES5Vc2VyTWVzc2Fn",
          "ZU1vZGVsIiEKEFByb2plY3RfQ2hlY2tSZXESDQoFZW1wdHkYASABKAUiNgoQ",
          "UHJvamVjdF9DaGVja1JzcBIiCgtwcm9qZWN0bGlzdBgBIAMoCzINLlByb2pl",
          "Y3RNb2RlbCKCAQoOUHJvamVjdF9BZGRSZXESEwoLUHJvamVjdE5hbWUYASAB",
          "KAkSEAoIUHJpb3JpdHkYAiABKAUSEwoLRGVzY3JpcHRpb24YAyABKAkSEgoK",
          "Q3JlYXRlRGF0ZRgEIAEoCRIRCglMaW1pdERhdGUYBSABKAkSDQoFdXNlcnMY",
          "BiADKAUiNAoOUHJvamVjdF9BZGRSc3ASIgoLcHJvamVjdGxpc3QYASADKAsy",
          "DS5Qcm9qZWN0TW9kZWwiJgoRUHJvamVjdF9EZWxldGVSZXESEQoJUHJvamVj",
          "dElEGAEgASgFIjcKEVByb2plY3RfRGVsZXRlUnNwEiIKC3Byb2plY3RsaXN0",
          "GAEgAygLMg0uUHJvamVjdE1vZGVsIjMKEVByb2plY3RfVXBkYXRlUmVxEh4K",
          "B3Byb2plY3QYASABKAsyDS5Qcm9qZWN0TW9kZWwiIgoRUHJvamVjdF9VcGRh",
          "dGVSc3ASDQoFZW1wdHkYASABKAUibQoQVXNlck1lc3NhZ2VNb2RlbBILCgNV",
          "aWQYASABKAUSEAoIVXNlck5hbWUYAiABKAkSDwoHVXNlckFnZRgDIAEoBRIW",
          "Cg5Vc2VyUHJvZmVzc2lvbhgEIAEoCRIRCglVc2VyU2NvcmUYBSABKAUiMQoM",
          "QWNjb3VudE1vZGVsEg8KB2FjY291bnQYASABKAkSEAoIcGFzc3dvcmQYAiAB",
          "KAki8QEKDFByb2plY3RNb2RlbBIRCglQcm9qZWN0SUQYASABKAUSEwoLUHJv",
          "amVjdE5hbWUYAiABKAkSEAoIUHJpb3JpdHkYAyABKAUSEwoLRGVzY3JpcHRp",
          "b24YBCABKAkSEgoKQ3JlYXRlRGF0ZRgFIAEoCRIRCglTdGFydERhdGUYBiAB",
          "KAkSDwoHRW5kRGF0ZRgHIAEoCRIRCglMaW1pdERhdGUYCCABKAkSEwoLUHJv",
          "Y2Vzc1dvcmQYCSABKAkSDQoFU3RhdGUYCiABKAUSFAoMQ29tcGxldGVuZXNz",
          "GAsgASgFEg0KBUV4aWxlGAwgASgIYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginReq), global::LoginReq.Parser, new[]{ "Account", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginRsp), global::LoginRsp.Parser, new[]{ "User", "Account" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterReq), global::RegisterReq.Parser, new[]{ "Account", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterRsp), global::RegisterRsp.Parser, new[]{ "Account" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UserMessage_UpdateReq), global::UserMessage_UpdateReq.Parser, new[]{ "Uid", "UserName", "UserAge", "UserProfession", "UserScore" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UserMessage_UpdateRsp), global::UserMessage_UpdateRsp.Parser, new[]{ "User" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UserMessage_LookReq), global::UserMessage_LookReq.Parser, new[]{ "Uid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UserMessage_LookRsp), global::UserMessage_LookRsp.Parser, new[]{ "User" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Friend_CheckReq), global::Friend_CheckReq.Parser, new[]{ "Uid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Friend_CheckRsp), global::Friend_CheckRsp.Parser, new[]{ "UsermessageList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Friend_AddReq), global::Friend_AddReq.Parser, new[]{ "ThisUid", "ThatUid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Friend_AddRsp), global::Friend_AddRsp.Parser, new[]{ "UsermessageList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Friend_DeleteReq), global::Friend_DeleteReq.Parser, new[]{ "ThisUid", "ThatUid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Friend_DeleteRsp), global::Friend_DeleteRsp.Parser, new[]{ "UsermessageList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FriendApply_CheckReq), global::FriendApply_CheckReq.Parser, new[]{ "Uid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FriendApply_CheckRsp), global::FriendApply_CheckRsp.Parser, new[]{ "UsermessageList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FriendApply_AgreeReq), global::FriendApply_AgreeReq.Parser, new[]{ "ThisUid", "ThatUid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FriendApply_AgreeRsp), global::FriendApply_AgreeRsp.Parser, new[]{ "ApplyList", "FriendList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FriendApply_DisagreeReq), global::FriendApply_DisagreeReq.Parser, new[]{ "ThisUid", "ThatUid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::FriendApply_DisagreeRsp), global::FriendApply_DisagreeRsp.Parser, new[]{ "ApplyList", "FriendList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BlackList_CheckReq), global::BlackList_CheckReq.Parser, new[]{ "Uid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BlackList_CheckRsp), global::BlackList_CheckRsp.Parser, new[]{ "UsermessageList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BlackList_AddReq), global::BlackList_AddReq.Parser, new[]{ "ThisUid", "ThatUid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BlackList_AddRsp), global::BlackList_AddRsp.Parser, new[]{ "ApplyList", "FriendList", "BlackList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BlackList_DeleteReq), global::BlackList_DeleteReq.Parser, new[]{ "ThisUid", "ThatUid" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::BlackList_DeleteRsp), global::BlackList_DeleteRsp.Parser, new[]{ "UsermessageList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Project_CheckReq), global::Project_CheckReq.Parser, new[]{ "Empty" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Project_CheckRsp), global::Project_CheckRsp.Parser, new[]{ "Projectlist" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Project_AddReq), global::Project_AddReq.Parser, new[]{ "ProjectName", "Priority", "Description", "CreateDate", "LimitDate", "Users" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Project_AddRsp), global::Project_AddRsp.Parser, new[]{ "Projectlist" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Project_DeleteReq), global::Project_DeleteReq.Parser, new[]{ "ProjectID" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Project_DeleteRsp), global::Project_DeleteRsp.Parser, new[]{ "Projectlist" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Project_UpdateReq), global::Project_UpdateReq.Parser, new[]{ "Project" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Project_UpdateRsp), global::Project_UpdateRsp.Parser, new[]{ "Empty" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::UserMessageModel), global::UserMessageModel.Parser, new[]{ "Uid", "UserName", "UserAge", "UserProfession", "UserScore" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::AccountModel), global::AccountModel.Parser, new[]{ "Account", "Password" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ProjectModel), global::ProjectModel.Parser, new[]{ "ProjectID", "ProjectName", "Priority", "Description", "CreateDate", "StartDate", "EndDate", "LimitDate", "ProcessWord", "State", "Completeness", "Exile" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
///100101
/// </summary>
public sealed partial class LoginReq : pb::IMessage<LoginReq> {
  private static readonly pb::MessageParser<LoginReq> _parser = new pb::MessageParser<LoginReq>(() => new LoginReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginReq(LoginReq other) : this() {
    account_ = other.account_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginReq Clone() {
    return new LoginReq(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private string account_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginReq other) {
    if (other == null) {
      return;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///100101
/// </summary>
public sealed partial class LoginRsp : pb::IMessage<LoginRsp> {
  private static readonly pb::MessageParser<LoginRsp> _parser = new pb::MessageParser<LoginRsp>(() => new LoginRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRsp(LoginRsp other) : this() {
    user_ = other.user_ != null ? other.user_.Clone() : null;
    account_ = other.account_ != null ? other.account_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRsp Clone() {
    return new LoginRsp(this);
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 1;
  private global::UserMessageModel user_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserMessageModel User {
    get { return user_; }
    set {
      user_ = value;
    }
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 2;
  private global::AccountModel account_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AccountModel Account {
    get { return account_; }
    set {
      account_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(User, other.User)) return false;
    if (!object.Equals(Account, other.Account)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (user_ != null) hash ^= User.GetHashCode();
    if (account_ != null) hash ^= Account.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (user_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(User);
    }
    if (account_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(Account);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (user_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (account_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginRsp other) {
    if (other == null) {
      return;
    }
    if (other.user_ != null) {
      if (user_ == null) {
        User = new global::UserMessageModel();
      }
      User.MergeFrom(other.User);
    }
    if (other.account_ != null) {
      if (account_ == null) {
        Account = new global::AccountModel();
      }
      Account.MergeFrom(other.Account);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (user_ == null) {
            User = new global::UserMessageModel();
          }
          input.ReadMessage(User);
          break;
        }
        case 18: {
          if (account_ == null) {
            Account = new global::AccountModel();
          }
          input.ReadMessage(Account);
          break;
        }
      }
    }
  }

}

/// <summary>
///100201
/// </summary>
public sealed partial class RegisterReq : pb::IMessage<RegisterReq> {
  private static readonly pb::MessageParser<RegisterReq> _parser = new pb::MessageParser<RegisterReq>(() => new RegisterReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterReq(RegisterReq other) : this() {
    account_ = other.account_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterReq Clone() {
    return new RegisterReq(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private string account_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterReq other) {
    if (other == null) {
      return;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

/// <summary>
///100201
/// </summary>
public sealed partial class RegisterRsp : pb::IMessage<RegisterRsp> {
  private static readonly pb::MessageParser<RegisterRsp> _parser = new pb::MessageParser<RegisterRsp>(() => new RegisterRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRsp(RegisterRsp other) : this() {
    account_ = other.account_ != null ? other.account_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRsp Clone() {
    return new RegisterRsp(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private global::AccountModel account_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::AccountModel Account {
    get { return account_; }
    set {
      account_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Account, other.Account)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (account_ != null) hash ^= Account.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (account_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Account);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (account_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterRsp other) {
    if (other == null) {
      return;
    }
    if (other.account_ != null) {
      if (account_ == null) {
        Account = new global::AccountModel();
      }
      Account.MergeFrom(other.Account);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (account_ == null) {
            Account = new global::AccountModel();
          }
          input.ReadMessage(Account);
          break;
        }
      }
    }
  }

}

/// <summary>
///100301
/// </summary>
public sealed partial class UserMessage_UpdateReq : pb::IMessage<UserMessage_UpdateReq> {
  private static readonly pb::MessageParser<UserMessage_UpdateReq> _parser = new pb::MessageParser<UserMessage_UpdateReq>(() => new UserMessage_UpdateReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserMessage_UpdateReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_UpdateReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_UpdateReq(UserMessage_UpdateReq other) : this() {
    uid_ = other.uid_;
    userName_ = other.userName_;
    userAge_ = other.userAge_;
    userProfession_ = other.userProfession_;
    userScore_ = other.userScore_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_UpdateReq Clone() {
    return new UserMessage_UpdateReq(this);
  }

  /// <summary>Field number for the "Uid" field.</summary>
  public const int UidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "UserName" field.</summary>
  public const int UserNameFieldNumber = 2;
  private string userName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserName {
    get { return userName_; }
    set {
      userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "UserAge" field.</summary>
  public const int UserAgeFieldNumber = 3;
  private int userAge_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserAge {
    get { return userAge_; }
    set {
      userAge_ = value;
    }
  }

  /// <summary>Field number for the "UserProfession" field.</summary>
  public const int UserProfessionFieldNumber = 4;
  private string userProfession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserProfession {
    get { return userProfession_; }
    set {
      userProfession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "UserScore" field.</summary>
  public const int UserScoreFieldNumber = 5;
  private int userScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserScore {
    get { return userScore_; }
    set {
      userScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserMessage_UpdateReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserMessage_UpdateReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    if (UserName != other.UserName) return false;
    if (UserAge != other.UserAge) return false;
    if (UserProfession != other.UserProfession) return false;
    if (UserScore != other.UserScore) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid != 0) hash ^= Uid.GetHashCode();
    if (UserName.Length != 0) hash ^= UserName.GetHashCode();
    if (UserAge != 0) hash ^= UserAge.GetHashCode();
    if (UserProfession.Length != 0) hash ^= UserProfession.GetHashCode();
    if (UserScore != 0) hash ^= UserScore.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (UserName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserName);
    }
    if (UserAge != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(UserAge);
    }
    if (UserProfession.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(UserProfession);
    }
    if (UserScore != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(UserScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
    }
    if (UserName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
    }
    if (UserAge != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserAge);
    }
    if (UserProfession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserProfession);
    }
    if (UserScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserScore);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserMessage_UpdateReq other) {
    if (other == null) {
      return;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    if (other.UserName.Length != 0) {
      UserName = other.UserName;
    }
    if (other.UserAge != 0) {
      UserAge = other.UserAge;
    }
    if (other.UserProfession.Length != 0) {
      UserProfession = other.UserProfession;
    }
    if (other.UserScore != 0) {
      UserScore = other.UserScore;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
        case 18: {
          UserName = input.ReadString();
          break;
        }
        case 24: {
          UserAge = input.ReadInt32();
          break;
        }
        case 34: {
          UserProfession = input.ReadString();
          break;
        }
        case 40: {
          UserScore = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100301
/// </summary>
public sealed partial class UserMessage_UpdateRsp : pb::IMessage<UserMessage_UpdateRsp> {
  private static readonly pb::MessageParser<UserMessage_UpdateRsp> _parser = new pb::MessageParser<UserMessage_UpdateRsp>(() => new UserMessage_UpdateRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserMessage_UpdateRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_UpdateRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_UpdateRsp(UserMessage_UpdateRsp other) : this() {
    user_ = other.user_ != null ? other.user_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_UpdateRsp Clone() {
    return new UserMessage_UpdateRsp(this);
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 1;
  private global::UserMessageModel user_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserMessageModel User {
    get { return user_; }
    set {
      user_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserMessage_UpdateRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserMessage_UpdateRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(User, other.User)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (user_ != null) hash ^= User.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (user_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(User);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (user_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserMessage_UpdateRsp other) {
    if (other == null) {
      return;
    }
    if (other.user_ != null) {
      if (user_ == null) {
        User = new global::UserMessageModel();
      }
      User.MergeFrom(other.User);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (user_ == null) {
            User = new global::UserMessageModel();
          }
          input.ReadMessage(User);
          break;
        }
      }
    }
  }

}

/// <summary>
///100302
/// </summary>
public sealed partial class UserMessage_LookReq : pb::IMessage<UserMessage_LookReq> {
  private static readonly pb::MessageParser<UserMessage_LookReq> _parser = new pb::MessageParser<UserMessage_LookReq>(() => new UserMessage_LookReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserMessage_LookReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_LookReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_LookReq(UserMessage_LookReq other) : this() {
    uid_ = other.uid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_LookReq Clone() {
    return new UserMessage_LookReq(this);
  }

  /// <summary>Field number for the "Uid" field.</summary>
  public const int UidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserMessage_LookReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserMessage_LookReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid != 0) hash ^= Uid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserMessage_LookReq other) {
    if (other == null) {
      return;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100302
/// </summary>
public sealed partial class UserMessage_LookRsp : pb::IMessage<UserMessage_LookRsp> {
  private static readonly pb::MessageParser<UserMessage_LookRsp> _parser = new pb::MessageParser<UserMessage_LookRsp>(() => new UserMessage_LookRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserMessage_LookRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_LookRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_LookRsp(UserMessage_LookRsp other) : this() {
    user_ = other.user_ != null ? other.user_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessage_LookRsp Clone() {
    return new UserMessage_LookRsp(this);
  }

  /// <summary>Field number for the "user" field.</summary>
  public const int UserFieldNumber = 1;
  private global::UserMessageModel user_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::UserMessageModel User {
    get { return user_; }
    set {
      user_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserMessage_LookRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserMessage_LookRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(User, other.User)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (user_ != null) hash ^= User.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (user_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(User);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (user_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserMessage_LookRsp other) {
    if (other == null) {
      return;
    }
    if (other.user_ != null) {
      if (user_ == null) {
        User = new global::UserMessageModel();
      }
      User.MergeFrom(other.User);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (user_ == null) {
            User = new global::UserMessageModel();
          }
          input.ReadMessage(User);
          break;
        }
      }
    }
  }

}

/// <summary>
///100401
/// </summary>
public sealed partial class Friend_CheckReq : pb::IMessage<Friend_CheckReq> {
  private static readonly pb::MessageParser<Friend_CheckReq> _parser = new pb::MessageParser<Friend_CheckReq>(() => new Friend_CheckReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Friend_CheckReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_CheckReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_CheckReq(Friend_CheckReq other) : this() {
    uid_ = other.uid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_CheckReq Clone() {
    return new Friend_CheckReq(this);
  }

  /// <summary>Field number for the "Uid" field.</summary>
  public const int UidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Friend_CheckReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Friend_CheckReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid != 0) hash ^= Uid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Friend_CheckReq other) {
    if (other == null) {
      return;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100401
/// </summary>
public sealed partial class Friend_CheckRsp : pb::IMessage<Friend_CheckRsp> {
  private static readonly pb::MessageParser<Friend_CheckRsp> _parser = new pb::MessageParser<Friend_CheckRsp>(() => new Friend_CheckRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Friend_CheckRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_CheckRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_CheckRsp(Friend_CheckRsp other) : this() {
    usermessageList_ = other.usermessageList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_CheckRsp Clone() {
    return new Friend_CheckRsp(this);
  }

  /// <summary>Field number for the "usermessageList" field.</summary>
  public const int UsermessageListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_usermessageList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> usermessageList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> UsermessageList {
    get { return usermessageList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Friend_CheckRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Friend_CheckRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!usermessageList_.Equals(other.usermessageList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= usermessageList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    usermessageList_.WriteTo(output, _repeated_usermessageList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += usermessageList_.CalculateSize(_repeated_usermessageList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Friend_CheckRsp other) {
    if (other == null) {
      return;
    }
    usermessageList_.Add(other.usermessageList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          usermessageList_.AddEntriesFrom(input, _repeated_usermessageList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100402
/// </summary>
public sealed partial class Friend_AddReq : pb::IMessage<Friend_AddReq> {
  private static readonly pb::MessageParser<Friend_AddReq> _parser = new pb::MessageParser<Friend_AddReq>(() => new Friend_AddReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Friend_AddReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_AddReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_AddReq(Friend_AddReq other) : this() {
    thisUid_ = other.thisUid_;
    thatUid_ = other.thatUid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_AddReq Clone() {
    return new Friend_AddReq(this);
  }

  /// <summary>Field number for the "ThisUid" field.</summary>
  public const int ThisUidFieldNumber = 1;
  private int thisUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThisUid {
    get { return thisUid_; }
    set {
      thisUid_ = value;
    }
  }

  /// <summary>Field number for the "ThatUid" field.</summary>
  public const int ThatUidFieldNumber = 2;
  private int thatUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThatUid {
    get { return thatUid_; }
    set {
      thatUid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Friend_AddReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Friend_AddReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ThisUid != other.ThisUid) return false;
    if (ThatUid != other.ThatUid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ThisUid != 0) hash ^= ThisUid.GetHashCode();
    if (ThatUid != 0) hash ^= ThatUid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ThisUid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ThisUid);
    }
    if (ThatUid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ThatUid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ThisUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisUid);
    }
    if (ThatUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThatUid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Friend_AddReq other) {
    if (other == null) {
      return;
    }
    if (other.ThisUid != 0) {
      ThisUid = other.ThisUid;
    }
    if (other.ThatUid != 0) {
      ThatUid = other.ThatUid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ThisUid = input.ReadInt32();
          break;
        }
        case 16: {
          ThatUid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100402
/// </summary>
public sealed partial class Friend_AddRsp : pb::IMessage<Friend_AddRsp> {
  private static readonly pb::MessageParser<Friend_AddRsp> _parser = new pb::MessageParser<Friend_AddRsp>(() => new Friend_AddRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Friend_AddRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_AddRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_AddRsp(Friend_AddRsp other) : this() {
    usermessageList_ = other.usermessageList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_AddRsp Clone() {
    return new Friend_AddRsp(this);
  }

  /// <summary>Field number for the "usermessageList" field.</summary>
  public const int UsermessageListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_usermessageList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> usermessageList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> UsermessageList {
    get { return usermessageList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Friend_AddRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Friend_AddRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!usermessageList_.Equals(other.usermessageList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= usermessageList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    usermessageList_.WriteTo(output, _repeated_usermessageList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += usermessageList_.CalculateSize(_repeated_usermessageList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Friend_AddRsp other) {
    if (other == null) {
      return;
    }
    usermessageList_.Add(other.usermessageList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          usermessageList_.AddEntriesFrom(input, _repeated_usermessageList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100403
/// </summary>
public sealed partial class Friend_DeleteReq : pb::IMessage<Friend_DeleteReq> {
  private static readonly pb::MessageParser<Friend_DeleteReq> _parser = new pb::MessageParser<Friend_DeleteReq>(() => new Friend_DeleteReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Friend_DeleteReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_DeleteReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_DeleteReq(Friend_DeleteReq other) : this() {
    thisUid_ = other.thisUid_;
    thatUid_ = other.thatUid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_DeleteReq Clone() {
    return new Friend_DeleteReq(this);
  }

  /// <summary>Field number for the "ThisUid" field.</summary>
  public const int ThisUidFieldNumber = 1;
  private int thisUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThisUid {
    get { return thisUid_; }
    set {
      thisUid_ = value;
    }
  }

  /// <summary>Field number for the "ThatUid" field.</summary>
  public const int ThatUidFieldNumber = 2;
  private int thatUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThatUid {
    get { return thatUid_; }
    set {
      thatUid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Friend_DeleteReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Friend_DeleteReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ThisUid != other.ThisUid) return false;
    if (ThatUid != other.ThatUid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ThisUid != 0) hash ^= ThisUid.GetHashCode();
    if (ThatUid != 0) hash ^= ThatUid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ThisUid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ThisUid);
    }
    if (ThatUid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ThatUid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ThisUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisUid);
    }
    if (ThatUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThatUid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Friend_DeleteReq other) {
    if (other == null) {
      return;
    }
    if (other.ThisUid != 0) {
      ThisUid = other.ThisUid;
    }
    if (other.ThatUid != 0) {
      ThatUid = other.ThatUid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ThisUid = input.ReadInt32();
          break;
        }
        case 16: {
          ThatUid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100403
/// </summary>
public sealed partial class Friend_DeleteRsp : pb::IMessage<Friend_DeleteRsp> {
  private static readonly pb::MessageParser<Friend_DeleteRsp> _parser = new pb::MessageParser<Friend_DeleteRsp>(() => new Friend_DeleteRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Friend_DeleteRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_DeleteRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_DeleteRsp(Friend_DeleteRsp other) : this() {
    usermessageList_ = other.usermessageList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Friend_DeleteRsp Clone() {
    return new Friend_DeleteRsp(this);
  }

  /// <summary>Field number for the "usermessageList" field.</summary>
  public const int UsermessageListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_usermessageList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> usermessageList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> UsermessageList {
    get { return usermessageList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Friend_DeleteRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Friend_DeleteRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!usermessageList_.Equals(other.usermessageList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= usermessageList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    usermessageList_.WriteTo(output, _repeated_usermessageList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += usermessageList_.CalculateSize(_repeated_usermessageList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Friend_DeleteRsp other) {
    if (other == null) {
      return;
    }
    usermessageList_.Add(other.usermessageList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          usermessageList_.AddEntriesFrom(input, _repeated_usermessageList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100501
/// </summary>
public sealed partial class FriendApply_CheckReq : pb::IMessage<FriendApply_CheckReq> {
  private static readonly pb::MessageParser<FriendApply_CheckReq> _parser = new pb::MessageParser<FriendApply_CheckReq>(() => new FriendApply_CheckReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FriendApply_CheckReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_CheckReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_CheckReq(FriendApply_CheckReq other) : this() {
    uid_ = other.uid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_CheckReq Clone() {
    return new FriendApply_CheckReq(this);
  }

  /// <summary>Field number for the "Uid" field.</summary>
  public const int UidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FriendApply_CheckReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FriendApply_CheckReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid != 0) hash ^= Uid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FriendApply_CheckReq other) {
    if (other == null) {
      return;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100501
/// </summary>
public sealed partial class FriendApply_CheckRsp : pb::IMessage<FriendApply_CheckRsp> {
  private static readonly pb::MessageParser<FriendApply_CheckRsp> _parser = new pb::MessageParser<FriendApply_CheckRsp>(() => new FriendApply_CheckRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FriendApply_CheckRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_CheckRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_CheckRsp(FriendApply_CheckRsp other) : this() {
    usermessageList_ = other.usermessageList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_CheckRsp Clone() {
    return new FriendApply_CheckRsp(this);
  }

  /// <summary>Field number for the "usermessageList" field.</summary>
  public const int UsermessageListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_usermessageList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> usermessageList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> UsermessageList {
    get { return usermessageList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FriendApply_CheckRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FriendApply_CheckRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!usermessageList_.Equals(other.usermessageList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= usermessageList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    usermessageList_.WriteTo(output, _repeated_usermessageList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += usermessageList_.CalculateSize(_repeated_usermessageList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FriendApply_CheckRsp other) {
    if (other == null) {
      return;
    }
    usermessageList_.Add(other.usermessageList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          usermessageList_.AddEntriesFrom(input, _repeated_usermessageList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100502
/// </summary>
public sealed partial class FriendApply_AgreeReq : pb::IMessage<FriendApply_AgreeReq> {
  private static readonly pb::MessageParser<FriendApply_AgreeReq> _parser = new pb::MessageParser<FriendApply_AgreeReq>(() => new FriendApply_AgreeReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FriendApply_AgreeReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_AgreeReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_AgreeReq(FriendApply_AgreeReq other) : this() {
    thisUid_ = other.thisUid_;
    thatUid_ = other.thatUid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_AgreeReq Clone() {
    return new FriendApply_AgreeReq(this);
  }

  /// <summary>Field number for the "ThisUid" field.</summary>
  public const int ThisUidFieldNumber = 1;
  private int thisUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThisUid {
    get { return thisUid_; }
    set {
      thisUid_ = value;
    }
  }

  /// <summary>Field number for the "ThatUid" field.</summary>
  public const int ThatUidFieldNumber = 2;
  private int thatUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThatUid {
    get { return thatUid_; }
    set {
      thatUid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FriendApply_AgreeReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FriendApply_AgreeReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ThisUid != other.ThisUid) return false;
    if (ThatUid != other.ThatUid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ThisUid != 0) hash ^= ThisUid.GetHashCode();
    if (ThatUid != 0) hash ^= ThatUid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ThisUid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ThisUid);
    }
    if (ThatUid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ThatUid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ThisUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisUid);
    }
    if (ThatUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThatUid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FriendApply_AgreeReq other) {
    if (other == null) {
      return;
    }
    if (other.ThisUid != 0) {
      ThisUid = other.ThisUid;
    }
    if (other.ThatUid != 0) {
      ThatUid = other.ThatUid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ThisUid = input.ReadInt32();
          break;
        }
        case 16: {
          ThatUid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100502
/// </summary>
public sealed partial class FriendApply_AgreeRsp : pb::IMessage<FriendApply_AgreeRsp> {
  private static readonly pb::MessageParser<FriendApply_AgreeRsp> _parser = new pb::MessageParser<FriendApply_AgreeRsp>(() => new FriendApply_AgreeRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FriendApply_AgreeRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_AgreeRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_AgreeRsp(FriendApply_AgreeRsp other) : this() {
    applyList_ = other.applyList_.Clone();
    friendList_ = other.friendList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_AgreeRsp Clone() {
    return new FriendApply_AgreeRsp(this);
  }

  /// <summary>Field number for the "applyList" field.</summary>
  public const int ApplyListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_applyList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> applyList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> ApplyList {
    get { return applyList_; }
  }

  /// <summary>Field number for the "friendList" field.</summary>
  public const int FriendListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_friendList_codec
      = pb::FieldCodec.ForMessage(18, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> friendList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> FriendList {
    get { return friendList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FriendApply_AgreeRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FriendApply_AgreeRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!applyList_.Equals(other.applyList_)) return false;
    if(!friendList_.Equals(other.friendList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= applyList_.GetHashCode();
    hash ^= friendList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    applyList_.WriteTo(output, _repeated_applyList_codec);
    friendList_.WriteTo(output, _repeated_friendList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += applyList_.CalculateSize(_repeated_applyList_codec);
    size += friendList_.CalculateSize(_repeated_friendList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FriendApply_AgreeRsp other) {
    if (other == null) {
      return;
    }
    applyList_.Add(other.applyList_);
    friendList_.Add(other.friendList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          applyList_.AddEntriesFrom(input, _repeated_applyList_codec);
          break;
        }
        case 18: {
          friendList_.AddEntriesFrom(input, _repeated_friendList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100503
/// </summary>
public sealed partial class FriendApply_DisagreeReq : pb::IMessage<FriendApply_DisagreeReq> {
  private static readonly pb::MessageParser<FriendApply_DisagreeReq> _parser = new pb::MessageParser<FriendApply_DisagreeReq>(() => new FriendApply_DisagreeReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FriendApply_DisagreeReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_DisagreeReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_DisagreeReq(FriendApply_DisagreeReq other) : this() {
    thisUid_ = other.thisUid_;
    thatUid_ = other.thatUid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_DisagreeReq Clone() {
    return new FriendApply_DisagreeReq(this);
  }

  /// <summary>Field number for the "ThisUid" field.</summary>
  public const int ThisUidFieldNumber = 1;
  private int thisUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThisUid {
    get { return thisUid_; }
    set {
      thisUid_ = value;
    }
  }

  /// <summary>Field number for the "ThatUid" field.</summary>
  public const int ThatUidFieldNumber = 2;
  private int thatUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThatUid {
    get { return thatUid_; }
    set {
      thatUid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FriendApply_DisagreeReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FriendApply_DisagreeReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ThisUid != other.ThisUid) return false;
    if (ThatUid != other.ThatUid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ThisUid != 0) hash ^= ThisUid.GetHashCode();
    if (ThatUid != 0) hash ^= ThatUid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ThisUid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ThisUid);
    }
    if (ThatUid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ThatUid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ThisUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisUid);
    }
    if (ThatUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThatUid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FriendApply_DisagreeReq other) {
    if (other == null) {
      return;
    }
    if (other.ThisUid != 0) {
      ThisUid = other.ThisUid;
    }
    if (other.ThatUid != 0) {
      ThatUid = other.ThatUid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ThisUid = input.ReadInt32();
          break;
        }
        case 16: {
          ThatUid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100503
/// </summary>
public sealed partial class FriendApply_DisagreeRsp : pb::IMessage<FriendApply_DisagreeRsp> {
  private static readonly pb::MessageParser<FriendApply_DisagreeRsp> _parser = new pb::MessageParser<FriendApply_DisagreeRsp>(() => new FriendApply_DisagreeRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<FriendApply_DisagreeRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_DisagreeRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_DisagreeRsp(FriendApply_DisagreeRsp other) : this() {
    applyList_ = other.applyList_.Clone();
    friendList_ = other.friendList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public FriendApply_DisagreeRsp Clone() {
    return new FriendApply_DisagreeRsp(this);
  }

  /// <summary>Field number for the "applyList" field.</summary>
  public const int ApplyListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_applyList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> applyList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> ApplyList {
    get { return applyList_; }
  }

  /// <summary>Field number for the "friendList" field.</summary>
  public const int FriendListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_friendList_codec
      = pb::FieldCodec.ForMessage(18, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> friendList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> FriendList {
    get { return friendList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as FriendApply_DisagreeRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(FriendApply_DisagreeRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!applyList_.Equals(other.applyList_)) return false;
    if(!friendList_.Equals(other.friendList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= applyList_.GetHashCode();
    hash ^= friendList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    applyList_.WriteTo(output, _repeated_applyList_codec);
    friendList_.WriteTo(output, _repeated_friendList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += applyList_.CalculateSize(_repeated_applyList_codec);
    size += friendList_.CalculateSize(_repeated_friendList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(FriendApply_DisagreeRsp other) {
    if (other == null) {
      return;
    }
    applyList_.Add(other.applyList_);
    friendList_.Add(other.friendList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          applyList_.AddEntriesFrom(input, _repeated_applyList_codec);
          break;
        }
        case 18: {
          friendList_.AddEntriesFrom(input, _repeated_friendList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100601
/// </summary>
public sealed partial class BlackList_CheckReq : pb::IMessage<BlackList_CheckReq> {
  private static readonly pb::MessageParser<BlackList_CheckReq> _parser = new pb::MessageParser<BlackList_CheckReq>(() => new BlackList_CheckReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BlackList_CheckReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_CheckReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_CheckReq(BlackList_CheckReq other) : this() {
    uid_ = other.uid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_CheckReq Clone() {
    return new BlackList_CheckReq(this);
  }

  /// <summary>Field number for the "Uid" field.</summary>
  public const int UidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BlackList_CheckReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BlackList_CheckReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid != 0) hash ^= Uid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BlackList_CheckReq other) {
    if (other == null) {
      return;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100601
/// </summary>
public sealed partial class BlackList_CheckRsp : pb::IMessage<BlackList_CheckRsp> {
  private static readonly pb::MessageParser<BlackList_CheckRsp> _parser = new pb::MessageParser<BlackList_CheckRsp>(() => new BlackList_CheckRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BlackList_CheckRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_CheckRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_CheckRsp(BlackList_CheckRsp other) : this() {
    usermessageList_ = other.usermessageList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_CheckRsp Clone() {
    return new BlackList_CheckRsp(this);
  }

  /// <summary>Field number for the "usermessageList" field.</summary>
  public const int UsermessageListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_usermessageList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> usermessageList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> UsermessageList {
    get { return usermessageList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BlackList_CheckRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BlackList_CheckRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!usermessageList_.Equals(other.usermessageList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= usermessageList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    usermessageList_.WriteTo(output, _repeated_usermessageList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += usermessageList_.CalculateSize(_repeated_usermessageList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BlackList_CheckRsp other) {
    if (other == null) {
      return;
    }
    usermessageList_.Add(other.usermessageList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          usermessageList_.AddEntriesFrom(input, _repeated_usermessageList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100602
/// </summary>
public sealed partial class BlackList_AddReq : pb::IMessage<BlackList_AddReq> {
  private static readonly pb::MessageParser<BlackList_AddReq> _parser = new pb::MessageParser<BlackList_AddReq>(() => new BlackList_AddReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BlackList_AddReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_AddReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_AddReq(BlackList_AddReq other) : this() {
    thisUid_ = other.thisUid_;
    thatUid_ = other.thatUid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_AddReq Clone() {
    return new BlackList_AddReq(this);
  }

  /// <summary>Field number for the "ThisUid" field.</summary>
  public const int ThisUidFieldNumber = 1;
  private int thisUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThisUid {
    get { return thisUid_; }
    set {
      thisUid_ = value;
    }
  }

  /// <summary>Field number for the "ThatUid" field.</summary>
  public const int ThatUidFieldNumber = 2;
  private int thatUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThatUid {
    get { return thatUid_; }
    set {
      thatUid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BlackList_AddReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BlackList_AddReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ThisUid != other.ThisUid) return false;
    if (ThatUid != other.ThatUid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ThisUid != 0) hash ^= ThisUid.GetHashCode();
    if (ThatUid != 0) hash ^= ThatUid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ThisUid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ThisUid);
    }
    if (ThatUid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ThatUid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ThisUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisUid);
    }
    if (ThatUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThatUid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BlackList_AddReq other) {
    if (other == null) {
      return;
    }
    if (other.ThisUid != 0) {
      ThisUid = other.ThisUid;
    }
    if (other.ThatUid != 0) {
      ThatUid = other.ThatUid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ThisUid = input.ReadInt32();
          break;
        }
        case 16: {
          ThatUid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100602
/// </summary>
public sealed partial class BlackList_AddRsp : pb::IMessage<BlackList_AddRsp> {
  private static readonly pb::MessageParser<BlackList_AddRsp> _parser = new pb::MessageParser<BlackList_AddRsp>(() => new BlackList_AddRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BlackList_AddRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_AddRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_AddRsp(BlackList_AddRsp other) : this() {
    applyList_ = other.applyList_.Clone();
    friendList_ = other.friendList_.Clone();
    blackList_ = other.blackList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_AddRsp Clone() {
    return new BlackList_AddRsp(this);
  }

  /// <summary>Field number for the "applyList" field.</summary>
  public const int ApplyListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_applyList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> applyList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> ApplyList {
    get { return applyList_; }
  }

  /// <summary>Field number for the "friendList" field.</summary>
  public const int FriendListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_friendList_codec
      = pb::FieldCodec.ForMessage(18, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> friendList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> FriendList {
    get { return friendList_; }
  }

  /// <summary>Field number for the "blackList" field.</summary>
  public const int BlackListFieldNumber = 3;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_blackList_codec
      = pb::FieldCodec.ForMessage(26, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> blackList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> BlackList {
    get { return blackList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BlackList_AddRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BlackList_AddRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!applyList_.Equals(other.applyList_)) return false;
    if(!friendList_.Equals(other.friendList_)) return false;
    if(!blackList_.Equals(other.blackList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= applyList_.GetHashCode();
    hash ^= friendList_.GetHashCode();
    hash ^= blackList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    applyList_.WriteTo(output, _repeated_applyList_codec);
    friendList_.WriteTo(output, _repeated_friendList_codec);
    blackList_.WriteTo(output, _repeated_blackList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += applyList_.CalculateSize(_repeated_applyList_codec);
    size += friendList_.CalculateSize(_repeated_friendList_codec);
    size += blackList_.CalculateSize(_repeated_blackList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BlackList_AddRsp other) {
    if (other == null) {
      return;
    }
    applyList_.Add(other.applyList_);
    friendList_.Add(other.friendList_);
    blackList_.Add(other.blackList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          applyList_.AddEntriesFrom(input, _repeated_applyList_codec);
          break;
        }
        case 18: {
          friendList_.AddEntriesFrom(input, _repeated_friendList_codec);
          break;
        }
        case 26: {
          blackList_.AddEntriesFrom(input, _repeated_blackList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100603
/// </summary>
public sealed partial class BlackList_DeleteReq : pb::IMessage<BlackList_DeleteReq> {
  private static readonly pb::MessageParser<BlackList_DeleteReq> _parser = new pb::MessageParser<BlackList_DeleteReq>(() => new BlackList_DeleteReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BlackList_DeleteReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_DeleteReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_DeleteReq(BlackList_DeleteReq other) : this() {
    thisUid_ = other.thisUid_;
    thatUid_ = other.thatUid_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_DeleteReq Clone() {
    return new BlackList_DeleteReq(this);
  }

  /// <summary>Field number for the "ThisUid" field.</summary>
  public const int ThisUidFieldNumber = 1;
  private int thisUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThisUid {
    get { return thisUid_; }
    set {
      thisUid_ = value;
    }
  }

  /// <summary>Field number for the "ThatUid" field.</summary>
  public const int ThatUidFieldNumber = 2;
  private int thatUid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ThatUid {
    get { return thatUid_; }
    set {
      thatUid_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BlackList_DeleteReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BlackList_DeleteReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ThisUid != other.ThisUid) return false;
    if (ThatUid != other.ThatUid) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ThisUid != 0) hash ^= ThisUid.GetHashCode();
    if (ThatUid != 0) hash ^= ThatUid.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ThisUid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ThisUid);
    }
    if (ThatUid != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(ThatUid);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ThisUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThisUid);
    }
    if (ThatUid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThatUid);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BlackList_DeleteReq other) {
    if (other == null) {
      return;
    }
    if (other.ThisUid != 0) {
      ThisUid = other.ThisUid;
    }
    if (other.ThatUid != 0) {
      ThatUid = other.ThatUid;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ThisUid = input.ReadInt32();
          break;
        }
        case 16: {
          ThatUid = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100603
/// </summary>
public sealed partial class BlackList_DeleteRsp : pb::IMessage<BlackList_DeleteRsp> {
  private static readonly pb::MessageParser<BlackList_DeleteRsp> _parser = new pb::MessageParser<BlackList_DeleteRsp>(() => new BlackList_DeleteRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<BlackList_DeleteRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_DeleteRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_DeleteRsp(BlackList_DeleteRsp other) : this() {
    usermessageList_ = other.usermessageList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public BlackList_DeleteRsp Clone() {
    return new BlackList_DeleteRsp(this);
  }

  /// <summary>Field number for the "usermessageList" field.</summary>
  public const int UsermessageListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::UserMessageModel> _repeated_usermessageList_codec
      = pb::FieldCodec.ForMessage(10, global::UserMessageModel.Parser);
  private readonly pbc::RepeatedField<global::UserMessageModel> usermessageList_ = new pbc::RepeatedField<global::UserMessageModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::UserMessageModel> UsermessageList {
    get { return usermessageList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as BlackList_DeleteRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(BlackList_DeleteRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!usermessageList_.Equals(other.usermessageList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= usermessageList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    usermessageList_.WriteTo(output, _repeated_usermessageList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += usermessageList_.CalculateSize(_repeated_usermessageList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(BlackList_DeleteRsp other) {
    if (other == null) {
      return;
    }
    usermessageList_.Add(other.usermessageList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          usermessageList_.AddEntriesFrom(input, _repeated_usermessageList_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100701
/// </summary>
public sealed partial class Project_CheckReq : pb::IMessage<Project_CheckReq> {
  private static readonly pb::MessageParser<Project_CheckReq> _parser = new pb::MessageParser<Project_CheckReq>(() => new Project_CheckReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Project_CheckReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_CheckReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_CheckReq(Project_CheckReq other) : this() {
    empty_ = other.empty_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_CheckReq Clone() {
    return new Project_CheckReq(this);
  }

  /// <summary>Field number for the "empty" field.</summary>
  public const int EmptyFieldNumber = 1;
  private int empty_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Empty {
    get { return empty_; }
    set {
      empty_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Project_CheckReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Project_CheckReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Empty != other.Empty) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Empty != 0) hash ^= Empty.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Empty != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Empty);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Empty != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Empty);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Project_CheckReq other) {
    if (other == null) {
      return;
    }
    if (other.Empty != 0) {
      Empty = other.Empty;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Empty = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100701
/// </summary>
public sealed partial class Project_CheckRsp : pb::IMessage<Project_CheckRsp> {
  private static readonly pb::MessageParser<Project_CheckRsp> _parser = new pb::MessageParser<Project_CheckRsp>(() => new Project_CheckRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Project_CheckRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_CheckRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_CheckRsp(Project_CheckRsp other) : this() {
    projectlist_ = other.projectlist_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_CheckRsp Clone() {
    return new Project_CheckRsp(this);
  }

  /// <summary>Field number for the "projectlist" field.</summary>
  public const int ProjectlistFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ProjectModel> _repeated_projectlist_codec
      = pb::FieldCodec.ForMessage(10, global::ProjectModel.Parser);
  private readonly pbc::RepeatedField<global::ProjectModel> projectlist_ = new pbc::RepeatedField<global::ProjectModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ProjectModel> Projectlist {
    get { return projectlist_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Project_CheckRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Project_CheckRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!projectlist_.Equals(other.projectlist_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= projectlist_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    projectlist_.WriteTo(output, _repeated_projectlist_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += projectlist_.CalculateSize(_repeated_projectlist_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Project_CheckRsp other) {
    if (other == null) {
      return;
    }
    projectlist_.Add(other.projectlist_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          projectlist_.AddEntriesFrom(input, _repeated_projectlist_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100702
/// </summary>
public sealed partial class Project_AddReq : pb::IMessage<Project_AddReq> {
  private static readonly pb::MessageParser<Project_AddReq> _parser = new pb::MessageParser<Project_AddReq>(() => new Project_AddReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Project_AddReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_AddReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_AddReq(Project_AddReq other) : this() {
    projectName_ = other.projectName_;
    priority_ = other.priority_;
    description_ = other.description_;
    createDate_ = other.createDate_;
    limitDate_ = other.limitDate_;
    users_ = other.users_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_AddReq Clone() {
    return new Project_AddReq(this);
  }

  /// <summary>Field number for the "ProjectName" field.</summary>
  public const int ProjectNameFieldNumber = 1;
  private string projectName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectName {
    get { return projectName_; }
    set {
      projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Priority" field.</summary>
  public const int PriorityFieldNumber = 2;
  private int priority_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Priority {
    get { return priority_; }
    set {
      priority_ = value;
    }
  }

  /// <summary>Field number for the "Description" field.</summary>
  public const int DescriptionFieldNumber = 3;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "CreateDate" field.</summary>
  public const int CreateDateFieldNumber = 4;
  private string createDate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CreateDate {
    get { return createDate_; }
    set {
      createDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "LimitDate" field.</summary>
  public const int LimitDateFieldNumber = 5;
  private string limitDate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LimitDate {
    get { return limitDate_; }
    set {
      limitDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "users" field.</summary>
  public const int UsersFieldNumber = 6;
  private static readonly pb::FieldCodec<int> _repeated_users_codec
      = pb::FieldCodec.ForInt32(50);
  private readonly pbc::RepeatedField<int> users_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> Users {
    get { return users_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Project_AddReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Project_AddReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProjectName != other.ProjectName) return false;
    if (Priority != other.Priority) return false;
    if (Description != other.Description) return false;
    if (CreateDate != other.CreateDate) return false;
    if (LimitDate != other.LimitDate) return false;
    if(!users_.Equals(other.users_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
    if (Priority != 0) hash ^= Priority.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (CreateDate.Length != 0) hash ^= CreateDate.GetHashCode();
    if (LimitDate.Length != 0) hash ^= LimitDate.GetHashCode();
    hash ^= users_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProjectName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(ProjectName);
    }
    if (Priority != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Priority);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Description);
    }
    if (CreateDate.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(CreateDate);
    }
    if (LimitDate.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(LimitDate);
    }
    users_.WriteTo(output, _repeated_users_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProjectName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
    }
    if (Priority != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (CreateDate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateDate);
    }
    if (LimitDate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LimitDate);
    }
    size += users_.CalculateSize(_repeated_users_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Project_AddReq other) {
    if (other == null) {
      return;
    }
    if (other.ProjectName.Length != 0) {
      ProjectName = other.ProjectName;
    }
    if (other.Priority != 0) {
      Priority = other.Priority;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.CreateDate.Length != 0) {
      CreateDate = other.CreateDate;
    }
    if (other.LimitDate.Length != 0) {
      LimitDate = other.LimitDate;
    }
    users_.Add(other.users_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ProjectName = input.ReadString();
          break;
        }
        case 16: {
          Priority = input.ReadInt32();
          break;
        }
        case 26: {
          Description = input.ReadString();
          break;
        }
        case 34: {
          CreateDate = input.ReadString();
          break;
        }
        case 42: {
          LimitDate = input.ReadString();
          break;
        }
        case 50:
        case 48: {
          users_.AddEntriesFrom(input, _repeated_users_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100702
/// </summary>
public sealed partial class Project_AddRsp : pb::IMessage<Project_AddRsp> {
  private static readonly pb::MessageParser<Project_AddRsp> _parser = new pb::MessageParser<Project_AddRsp>(() => new Project_AddRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Project_AddRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_AddRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_AddRsp(Project_AddRsp other) : this() {
    projectlist_ = other.projectlist_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_AddRsp Clone() {
    return new Project_AddRsp(this);
  }

  /// <summary>Field number for the "projectlist" field.</summary>
  public const int ProjectlistFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ProjectModel> _repeated_projectlist_codec
      = pb::FieldCodec.ForMessage(10, global::ProjectModel.Parser);
  private readonly pbc::RepeatedField<global::ProjectModel> projectlist_ = new pbc::RepeatedField<global::ProjectModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ProjectModel> Projectlist {
    get { return projectlist_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Project_AddRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Project_AddRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!projectlist_.Equals(other.projectlist_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= projectlist_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    projectlist_.WriteTo(output, _repeated_projectlist_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += projectlist_.CalculateSize(_repeated_projectlist_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Project_AddRsp other) {
    if (other == null) {
      return;
    }
    projectlist_.Add(other.projectlist_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          projectlist_.AddEntriesFrom(input, _repeated_projectlist_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100703
/// </summary>
public sealed partial class Project_DeleteReq : pb::IMessage<Project_DeleteReq> {
  private static readonly pb::MessageParser<Project_DeleteReq> _parser = new pb::MessageParser<Project_DeleteReq>(() => new Project_DeleteReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Project_DeleteReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_DeleteReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_DeleteReq(Project_DeleteReq other) : this() {
    projectID_ = other.projectID_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_DeleteReq Clone() {
    return new Project_DeleteReq(this);
  }

  /// <summary>Field number for the "ProjectID" field.</summary>
  public const int ProjectIDFieldNumber = 1;
  private int projectID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ProjectID {
    get { return projectID_; }
    set {
      projectID_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Project_DeleteReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Project_DeleteReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProjectID != other.ProjectID) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProjectID != 0) hash ^= ProjectID.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProjectID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ProjectID);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProjectID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProjectID);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Project_DeleteReq other) {
    if (other == null) {
      return;
    }
    if (other.ProjectID != 0) {
      ProjectID = other.ProjectID;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ProjectID = input.ReadInt32();
          break;
        }
      }
    }
  }

}

/// <summary>
///100703
/// </summary>
public sealed partial class Project_DeleteRsp : pb::IMessage<Project_DeleteRsp> {
  private static readonly pb::MessageParser<Project_DeleteRsp> _parser = new pb::MessageParser<Project_DeleteRsp>(() => new Project_DeleteRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Project_DeleteRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_DeleteRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_DeleteRsp(Project_DeleteRsp other) : this() {
    projectlist_ = other.projectlist_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_DeleteRsp Clone() {
    return new Project_DeleteRsp(this);
  }

  /// <summary>Field number for the "projectlist" field.</summary>
  public const int ProjectlistFieldNumber = 1;
  private static readonly pb::FieldCodec<global::ProjectModel> _repeated_projectlist_codec
      = pb::FieldCodec.ForMessage(10, global::ProjectModel.Parser);
  private readonly pbc::RepeatedField<global::ProjectModel> projectlist_ = new pbc::RepeatedField<global::ProjectModel>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ProjectModel> Projectlist {
    get { return projectlist_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Project_DeleteRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Project_DeleteRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!projectlist_.Equals(other.projectlist_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= projectlist_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    projectlist_.WriteTo(output, _repeated_projectlist_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += projectlist_.CalculateSize(_repeated_projectlist_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Project_DeleteRsp other) {
    if (other == null) {
      return;
    }
    projectlist_.Add(other.projectlist_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          projectlist_.AddEntriesFrom(input, _repeated_projectlist_codec);
          break;
        }
      }
    }
  }

}

/// <summary>
///100704
/// </summary>
public sealed partial class Project_UpdateReq : pb::IMessage<Project_UpdateReq> {
  private static readonly pb::MessageParser<Project_UpdateReq> _parser = new pb::MessageParser<Project_UpdateReq>(() => new Project_UpdateReq());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Project_UpdateReq> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_UpdateReq() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_UpdateReq(Project_UpdateReq other) : this() {
    project_ = other.project_ != null ? other.project_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_UpdateReq Clone() {
    return new Project_UpdateReq(this);
  }

  /// <summary>Field number for the "project" field.</summary>
  public const int ProjectFieldNumber = 1;
  private global::ProjectModel project_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ProjectModel Project {
    get { return project_; }
    set {
      project_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Project_UpdateReq);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Project_UpdateReq other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Project, other.Project)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (project_ != null) hash ^= Project.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (project_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Project);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (project_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Project);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Project_UpdateReq other) {
    if (other == null) {
      return;
    }
    if (other.project_ != null) {
      if (project_ == null) {
        Project = new global::ProjectModel();
      }
      Project.MergeFrom(other.Project);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (project_ == null) {
            Project = new global::ProjectModel();
          }
          input.ReadMessage(Project);
          break;
        }
      }
    }
  }

}

/// <summary>
///100704
/// </summary>
public sealed partial class Project_UpdateRsp : pb::IMessage<Project_UpdateRsp> {
  private static readonly pb::MessageParser<Project_UpdateRsp> _parser = new pb::MessageParser<Project_UpdateRsp>(() => new Project_UpdateRsp());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Project_UpdateRsp> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_UpdateRsp() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_UpdateRsp(Project_UpdateRsp other) : this() {
    empty_ = other.empty_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Project_UpdateRsp Clone() {
    return new Project_UpdateRsp(this);
  }

  /// <summary>Field number for the "empty" field.</summary>
  public const int EmptyFieldNumber = 1;
  private int empty_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Empty {
    get { return empty_; }
    set {
      empty_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Project_UpdateRsp);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Project_UpdateRsp other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Empty != other.Empty) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Empty != 0) hash ^= Empty.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Empty != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Empty);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Empty != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Empty);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Project_UpdateRsp other) {
    if (other == null) {
      return;
    }
    if (other.Empty != 0) {
      Empty = other.Empty;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Empty = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class UserMessageModel : pb::IMessage<UserMessageModel> {
  private static readonly pb::MessageParser<UserMessageModel> _parser = new pb::MessageParser<UserMessageModel>(() => new UserMessageModel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<UserMessageModel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessageModel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessageModel(UserMessageModel other) : this() {
    uid_ = other.uid_;
    userName_ = other.userName_;
    userAge_ = other.userAge_;
    userProfession_ = other.userProfession_;
    userScore_ = other.userScore_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public UserMessageModel Clone() {
    return new UserMessageModel(this);
  }

  /// <summary>Field number for the "Uid" field.</summary>
  public const int UidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "UserName" field.</summary>
  public const int UserNameFieldNumber = 2;
  private string userName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserName {
    get { return userName_; }
    set {
      userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "UserAge" field.</summary>
  public const int UserAgeFieldNumber = 3;
  private int userAge_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserAge {
    get { return userAge_; }
    set {
      userAge_ = value;
    }
  }

  /// <summary>Field number for the "UserProfession" field.</summary>
  public const int UserProfessionFieldNumber = 4;
  private string userProfession_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string UserProfession {
    get { return userProfession_; }
    set {
      userProfession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "UserScore" field.</summary>
  public const int UserScoreFieldNumber = 5;
  private int userScore_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int UserScore {
    get { return userScore_; }
    set {
      userScore_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as UserMessageModel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(UserMessageModel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    if (UserName != other.UserName) return false;
    if (UserAge != other.UserAge) return false;
    if (UserProfession != other.UserProfession) return false;
    if (UserScore != other.UserScore) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid != 0) hash ^= Uid.GetHashCode();
    if (UserName.Length != 0) hash ^= UserName.GetHashCode();
    if (UserAge != 0) hash ^= UserAge.GetHashCode();
    if (UserProfession.Length != 0) hash ^= UserProfession.GetHashCode();
    if (UserScore != 0) hash ^= UserScore.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Uid);
    }
    if (UserName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(UserName);
    }
    if (UserAge != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(UserAge);
    }
    if (UserProfession.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(UserProfession);
    }
    if (UserScore != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(UserScore);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
    }
    if (UserName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
    }
    if (UserAge != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserAge);
    }
    if (UserProfession.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(UserProfession);
    }
    if (UserScore != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserScore);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(UserMessageModel other) {
    if (other == null) {
      return;
    }
    if (other.Uid != 0) {
      Uid = other.Uid;
    }
    if (other.UserName.Length != 0) {
      UserName = other.UserName;
    }
    if (other.UserAge != 0) {
      UserAge = other.UserAge;
    }
    if (other.UserProfession.Length != 0) {
      UserProfession = other.UserProfession;
    }
    if (other.UserScore != 0) {
      UserScore = other.UserScore;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Uid = input.ReadInt32();
          break;
        }
        case 18: {
          UserName = input.ReadString();
          break;
        }
        case 24: {
          UserAge = input.ReadInt32();
          break;
        }
        case 34: {
          UserProfession = input.ReadString();
          break;
        }
        case 40: {
          UserScore = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class AccountModel : pb::IMessage<AccountModel> {
  private static readonly pb::MessageParser<AccountModel> _parser = new pb::MessageParser<AccountModel>(() => new AccountModel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<AccountModel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AccountModel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AccountModel(AccountModel other) : this() {
    account_ = other.account_;
    password_ = other.password_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public AccountModel Clone() {
    return new AccountModel(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int AccountFieldNumber = 1;
  private string account_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as AccountModel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(AccountModel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account != other.Account) return false;
    if (Password != other.Password) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account.Length != 0) hash ^= Account.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Account.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(AccountModel other) {
    if (other == null) {
      return;
    }
    if (other.Account.Length != 0) {
      Account = other.Account;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Account = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class ProjectModel : pb::IMessage<ProjectModel> {
  private static readonly pb::MessageParser<ProjectModel> _parser = new pb::MessageParser<ProjectModel>(() => new ProjectModel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ProjectModel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PBModelReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProjectModel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProjectModel(ProjectModel other) : this() {
    projectID_ = other.projectID_;
    projectName_ = other.projectName_;
    priority_ = other.priority_;
    description_ = other.description_;
    createDate_ = other.createDate_;
    startDate_ = other.startDate_;
    endDate_ = other.endDate_;
    limitDate_ = other.limitDate_;
    processWord_ = other.processWord_;
    state_ = other.state_;
    completeness_ = other.completeness_;
    exile_ = other.exile_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ProjectModel Clone() {
    return new ProjectModel(this);
  }

  /// <summary>Field number for the "ProjectID" field.</summary>
  public const int ProjectIDFieldNumber = 1;
  private int projectID_;
  /// <summary>
  ///项目ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ProjectID {
    get { return projectID_; }
    set {
      projectID_ = value;
    }
  }

  /// <summary>Field number for the "ProjectName" field.</summary>
  public const int ProjectNameFieldNumber = 2;
  private string projectName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProjectName {
    get { return projectName_; }
    set {
      projectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "Priority" field.</summary>
  public const int PriorityFieldNumber = 3;
  private int priority_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Priority {
    get { return priority_; }
    set {
      priority_ = value;
    }
  }

  /// <summary>Field number for the "Description" field.</summary>
  public const int DescriptionFieldNumber = 4;
  private string description_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Description {
    get { return description_; }
    set {
      description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "CreateDate" field.</summary>
  public const int CreateDateFieldNumber = 5;
  private string createDate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string CreateDate {
    get { return createDate_; }
    set {
      createDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "StartDate" field.</summary>
  public const int StartDateFieldNumber = 6;
  private string startDate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StartDate {
    get { return startDate_; }
    set {
      startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "EndDate" field.</summary>
  public const int EndDateFieldNumber = 7;
  private string endDate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string EndDate {
    get { return endDate_; }
    set {
      endDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "LimitDate" field.</summary>
  public const int LimitDateFieldNumber = 8;
  private string limitDate_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string LimitDate {
    get { return limitDate_; }
    set {
      limitDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ProcessWord" field.</summary>
  public const int ProcessWordFieldNumber = 9;
  private string processWord_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ProcessWord {
    get { return processWord_; }
    set {
      processWord_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "State" field.</summary>
  public const int StateFieldNumber = 10;
  private int state_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int State {
    get { return state_; }
    set {
      state_ = value;
    }
  }

  /// <summary>Field number for the "Completeness" field.</summary>
  public const int CompletenessFieldNumber = 11;
  private int completeness_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Completeness {
    get { return completeness_; }
    set {
      completeness_ = value;
    }
  }

  /// <summary>Field number for the "Exile" field.</summary>
  public const int ExileFieldNumber = 12;
  private bool exile_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Exile {
    get { return exile_; }
    set {
      exile_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ProjectModel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ProjectModel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ProjectID != other.ProjectID) return false;
    if (ProjectName != other.ProjectName) return false;
    if (Priority != other.Priority) return false;
    if (Description != other.Description) return false;
    if (CreateDate != other.CreateDate) return false;
    if (StartDate != other.StartDate) return false;
    if (EndDate != other.EndDate) return false;
    if (LimitDate != other.LimitDate) return false;
    if (ProcessWord != other.ProcessWord) return false;
    if (State != other.State) return false;
    if (Completeness != other.Completeness) return false;
    if (Exile != other.Exile) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ProjectID != 0) hash ^= ProjectID.GetHashCode();
    if (ProjectName.Length != 0) hash ^= ProjectName.GetHashCode();
    if (Priority != 0) hash ^= Priority.GetHashCode();
    if (Description.Length != 0) hash ^= Description.GetHashCode();
    if (CreateDate.Length != 0) hash ^= CreateDate.GetHashCode();
    if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
    if (EndDate.Length != 0) hash ^= EndDate.GetHashCode();
    if (LimitDate.Length != 0) hash ^= LimitDate.GetHashCode();
    if (ProcessWord.Length != 0) hash ^= ProcessWord.GetHashCode();
    if (State != 0) hash ^= State.GetHashCode();
    if (Completeness != 0) hash ^= Completeness.GetHashCode();
    if (Exile != false) hash ^= Exile.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ProjectID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(ProjectID);
    }
    if (ProjectName.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(ProjectName);
    }
    if (Priority != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Priority);
    }
    if (Description.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(Description);
    }
    if (CreateDate.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(CreateDate);
    }
    if (StartDate.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(StartDate);
    }
    if (EndDate.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(EndDate);
    }
    if (LimitDate.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(LimitDate);
    }
    if (ProcessWord.Length != 0) {
      output.WriteRawTag(74);
      output.WriteString(ProcessWord);
    }
    if (State != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(State);
    }
    if (Completeness != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(Completeness);
    }
    if (Exile != false) {
      output.WriteRawTag(96);
      output.WriteBool(Exile);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ProjectID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProjectID);
    }
    if (ProjectName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectName);
    }
    if (Priority != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
    }
    if (Description.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
    }
    if (CreateDate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateDate);
    }
    if (StartDate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
    }
    if (EndDate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDate);
    }
    if (LimitDate.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LimitDate);
    }
    if (ProcessWord.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ProcessWord);
    }
    if (State != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
    }
    if (Completeness != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Completeness);
    }
    if (Exile != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ProjectModel other) {
    if (other == null) {
      return;
    }
    if (other.ProjectID != 0) {
      ProjectID = other.ProjectID;
    }
    if (other.ProjectName.Length != 0) {
      ProjectName = other.ProjectName;
    }
    if (other.Priority != 0) {
      Priority = other.Priority;
    }
    if (other.Description.Length != 0) {
      Description = other.Description;
    }
    if (other.CreateDate.Length != 0) {
      CreateDate = other.CreateDate;
    }
    if (other.StartDate.Length != 0) {
      StartDate = other.StartDate;
    }
    if (other.EndDate.Length != 0) {
      EndDate = other.EndDate;
    }
    if (other.LimitDate.Length != 0) {
      LimitDate = other.LimitDate;
    }
    if (other.ProcessWord.Length != 0) {
      ProcessWord = other.ProcessWord;
    }
    if (other.State != 0) {
      State = other.State;
    }
    if (other.Completeness != 0) {
      Completeness = other.Completeness;
    }
    if (other.Exile != false) {
      Exile = other.Exile;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ProjectID = input.ReadInt32();
          break;
        }
        case 18: {
          ProjectName = input.ReadString();
          break;
        }
        case 24: {
          Priority = input.ReadInt32();
          break;
        }
        case 34: {
          Description = input.ReadString();
          break;
        }
        case 42: {
          CreateDate = input.ReadString();
          break;
        }
        case 50: {
          StartDate = input.ReadString();
          break;
        }
        case 58: {
          EndDate = input.ReadString();
          break;
        }
        case 66: {
          LimitDate = input.ReadString();
          break;
        }
        case 74: {
          ProcessWord = input.ReadString();
          break;
        }
        case 80: {
          State = input.ReadInt32();
          break;
        }
        case 88: {
          Completeness = input.ReadInt32();
          break;
        }
        case 96: {
          Exile = input.ReadBool();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
